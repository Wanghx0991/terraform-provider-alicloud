name: golangci-lint
on:
  pull_request:
    paths:
      - .github/workflows/pull_requests.yml
      - alicloud/*.go
jobs:
  golangci-lint:
    name: runner / golangci-lint
    runs-on: ubuntu-latest
    steps:
      - name: Check out code into the Go module directory
        uses: actions/checkout@v2
      - name: golangci-lint
        uses: golangci/golangci-lint-action@v2
        with:
          # Optional: version of golangci-lint to use in form of v1.2 or v1.2.3 or `latest` to use the latest version
          version: v1.29
          # Optional: golangci-lint command line arguments.
          args: --timeout=25m
          # Optional: show only new issues if it's a pull request. The default value is `false`.
          only-new-issues: true
          # Optional: if set to true then the action will use pre-installed Go.
          skip-go-installation: true
          # Optional: if set to true then the action don't cache or restore ~/.cache/go-build.
          skip-build-cache: true

  golangci-lint-review-log:
    name: golangci-lint-review-log
    runs-on: ubuntu-latest
    steps:
      - name: Check out code into the Go module directory
        uses: actions/checkout@v2
      - name: golangci-lint
        uses: reviewdog/action-golangci-lint@v2
        with:
          # optionally use a specific version of Go rather than the latest one
          go_version: '1.16'

          # Can pass --config flag to change golangci-lint behavior and target
          # directory.
          golangci_lint_flags: '--timeout=25m ./alicloud'



#   You can add more and more supported linters with different config.
  errcheck:
    name: runner / errcheck
    runs-on: ubuntu-latest
    steps:
      - name: Check out code into the Go module directory
        uses: actions/checkout@v2
      - name: errcheck
        uses: reviewdog/action-golangci-lint@v2
        with:
          golangci_lint_flags: '--timeout=25m --disable-all -E errcheck'
          tool_name: errcheck
          level: info

