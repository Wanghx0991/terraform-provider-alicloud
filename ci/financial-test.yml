shared:
  - &clone-provider
    get: terraform-provider-alicloud
    resource: terraform-provider-alicloud
    trigger: false

  - &get-aliyun-cli
    get: aliyun-cli
    resource: aliyun-cli

  - &run
    task: terraform ci
    file: terraform-provider-alicloud/ci/tasks/run.yml
    params: &run-params
      ALICLOUD_ACCESS_KEY: {{alicloud_access_key}}
      ALICLOUD_SECRET_KEY: {{alicloud_secret_key}}
      ALICLOUD_REGION: {{alicloud_region}}
      ALICLOUD_ACCOUNT_SITE: {{alicloud_account_site}}
      TEST_CASE_CODE: ""
      SWEEPER: false
      CHECKOUT_REGION: "true"
      ACCESS_URL: {{access_ci_url}}
      ACCESS_USER_NAME: {{access_ci_user_name}}
      ACCESS_PASSWORD: {{access_ci_password}}
      DING_TALK_TOKEN: {{ding_talk_token}}
      ALICLOUD_ACCOUNT_ID: {{alicloud_accound_id}}
      ALICLOUD_RESOURCE_GROUP_ID: {{alicloud_resource_group_id}}
      CONCOURSE_TARGET: {{alicloud_concourse_target}}
      CONCOURSE_TARGET_URL: {{alicloud_concourse_target_url}}
      CONCOURSE_TARGET_USER: {{alicloud_concourse_target_user}}
      CONCOURSE_TARGET_PASSWORD: {{alicloud_concourse_target_password}}
      CONCOURSE_TARGET_TRIGGER_PIPELINE_NAME: {{alicloud_concourse_target_pipeline_name}}
      TRIGGER_TARGET_PIPELINE: {{alicloud_trigger_target_pipeline}}
      ALICLOUD_ACCESS_KEY_MASTER: {{alicloud_access_key_master}}
      ALICLOUD_SECRET_KEY_MASTER: {{alicloud_secret_key_master}}
      ALICLOUD_ACCESS_KEY_SLAVE:  {{alicloud_access_key_slave}}
      ALICLOUD_SECRET_KEY_SLAVE:  {{alicloud_secret_key_slave}}


jobs:
  - name: ApiGateway
    plan:
      - <<: *clone-provider
      - aggregate:
          - *get-aliyun-cli
      - <<: *run
        params:
          <<: *run-params
          TEST_CASE_CODE: "Apigateway"
          SWEEPER_CODE: "alicloud_api_gateway"

  - name: ADB
    plan:
      - <<: *clone-provider
      - aggregate:
          - *get-aliyun-cli
      - <<: *run
        params:
          <<: *run-params
          TEST_CASE_CODE: "ADB"

  - name: ALB
    plan:
      - <<: *clone-provider
      - aggregate:
          - *get-aliyun-cli
      - <<: *run
        params:
          <<: *run-params
          TEST_CASE_CODE: "ALB"

  - name: RAM
    plan:
      - <<: *clone-provider
      - aggregate:
          - *get-aliyun-cli
      - <<: *run
        params:
          <<: *run-params
          TEST_CASE_CODE: "RAM"

  - name: Ess
    plan:
      - <<: *clone-provider
      - aggregate:
          - *get-aliyun-cli
      - <<: *run
        params:
          <<: *run-params
          TEST_CASE_CODE: "Ess"

  - name: SLB
    plan:
      - <<: *clone-provider
      - aggregate:
          - *get-aliyun-cli
      - <<: *run
        params:
          <<: *run-params
          TEST_CASE_CODE: "SLB"

  - name: ROS
    plan:
      - <<: *clone-provider
      - aggregate:
          - *get-aliyun-cli
      - <<: *run
        params:
          <<: *run-params
          TEST_CASE_CODE: "ROS"

  - name: VPC
    plan:
      - <<: *clone-provider
      - aggregate:
          - *get-aliyun-cli
      - <<: *run
        params:
          <<: *run-params
          TEST_CASE_CODE: "VPC"

  - name: CR
    plan:
      - <<: *clone-provider
      - aggregate:
          - *get-aliyun-cli
      - <<: *run
        params:
          <<: *run-params
          TEST_CASE_CODE: "CR"

  - name: Rds
    plan:
      - <<: *clone-provider
      - aggregate:
          - *get-aliyun-cli
      - <<: *run
        params:
          <<: *run-params
          TEST_CASE_CODE: "Rds"

  - name: Amqp
    plan:
      - <<: *clone-provider
      - aggregate:
          - *get-aliyun-cli
      - <<: *run
        params:
          <<: *run-params
          TEST_CASE_CODE: "Amqp"

  - name: Ots
    plan:
      - <<: *clone-provider
      - aggregate:
          - *get-aliyun-cli
      - <<: *run
        params:
          <<: *run-params
          TEST_CASE_CODE: "Ots"

  - name: VPN
    plan:
      - <<: *clone-provider
      - aggregate:
          - *get-aliyun-cli
      - <<: *run
        params:
          <<: *run-params
          TEST_CASE_CODE: "VPN"

  - name: PolarDB
    plan:
      - <<: *clone-provider
      - aggregate:
          - *get-aliyun-cli
      - <<: *run
        params:
          <<: *run-params
          TEST_CASE_CODE: "PolarDB"

  - name: Edas
    plan:
      - <<: *clone-provider
      - aggregate:
          - *get-aliyun-cli
      - <<: *run
        params:
          <<: *run-params
          TEST_CASE_CODE: "Edas"

  - name: KVStore
    plan:
      - <<: *clone-provider
      - aggregate:
          - *get-aliyun-cli
      - <<: *run
        params:
          <<: *run-params
          TEST_CASE_CODE: "KVStore"

  - name: Oss
    plan:
      - <<: *clone-provider
      - aggregate:
          - *get-aliyun-cli
      - <<: *run
        params:
          <<: *run-params
          TEST_CASE_CODE: "Oss"
          ALICLOUD_REGION: "cn-shanghai-finance-1-pub"

  - name: Bastionhost
    plan:
      - <<: *clone-provider
      - aggregate:
          - *get-aliyun-cli
      - <<: *run
        params:
          <<: *run-params
          TEST_CASE_CODE: "Bastionhost"

  - name: Ddoscoo
    plan:
      - <<: *clone-provider
      - aggregate:
          - *get-aliyun-cli
      - <<: *run
        params:
          <<: *run-params
          TEST_CASE_CODE: "Ddoscoo"

  - name: Ddosbgp
    plan:
      - <<: *clone-provider
      - aggregate:
          - *get-aliyun-cli
      - <<: *run
        params:
          <<: *run-params
          TEST_CASE_CODE: "Ddosbgp"

resources:
  - name: terraform-provider-alicloud
    type: git
    source:
      uri: https://github.com/wanghx0991/terraform-provider-alicloud.git
      branch: finance_test

  - name: aliyun-cli
    type: s3
    source:
      access_key_id: {{aliyun_cli_access_key}}
      secret_access_key: {{aliyun_cli_secret_key}}
      bucket: {{aliyun_cli_bucket}}
      regexp: .*-cli-linux-3\.0\.(\d+)-amd64\.tgz
      region_name: {{aliyun_cli_region}}
      endpoint: oss-((aliyun_cli_region)).aliyuncs.com